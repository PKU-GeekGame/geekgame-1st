  org 0x7C00
  jmp short Start
  nop

; FAT12 boot header
Oem                 db 'GeekGame'
BytesPerSector			dw 512
SectorsPerCluster		db 1
ReservedSectors			dw 1
Fats					      db 2
RootEntries				  dw 224
Sectors					    dw 2880
Media					      db 0xF0
SectorsPerFat			  dw 9
SectorsPerTrack			dw 18
Heads					      dw 2
HiddenSectors			  dd 0
LargeSectors			  dd 0
DriveNumber				  db 0
Reserved				    db 0
Signature				    db 0x29
Id						      dd 0
VolumeLabel				  db 'TO_THE_PAST'
SystemId				    db 'FAT12   '

Start:
  ; initialize
  xor ax, ax
  mov ss, ax
  mov sp, 0x7c00
  mov ds, ax
  mov es, ax

  ; clear screen
  mov ah, 0x00
  mov al, 0x03  ; text mode 80x25 16 colors
  int 0x10

  ; print message
  mov si, MessageEnc
PutCharLoop:
  ; read char
  mov al, [si]
  inc si
  ; check if need to exit
  cmp al, 0
  je  Pause
  ; print char
  mov ah, 0x0e
  mov bx, 15
  xor al, 132
  int 0x10
  ; loop
  jmp PutCharLoop

Pause:
  hlt
  jmp Pause

; message (encrypted)
MessageEnc:
  db 0xc0, 0xeb, 0xa4, 0xfd, 0xeb, 0xf1, 0xa4, 0xf6, 0xe1, 0xe9, 0xe1, 0xe9
  db 0xe6, 0xe1, 0xf6, 0xa4, 0xf0, 0xec, 0xeb, 0xf7, 0xe1, 0xa4, 0xf4, 0xe5
  db 0xf7, 0xf0, 0xa4, 0xe1, 0xf2, 0xe1, 0xea, 0xf0, 0xf7, 0xbb, 0x89, 0x8e
  db 0x89, 0x8e, 0xe2, 0xe8, 0xe5, 0xe3, 0xff, 0xf0, 0xec, 0xb7, 0xdb, 0xd7
  db 0xf1, 0xea, 0xb1, 0xe1, 0xf0, 0xdb, 0xec, 0xb4, 0xf6, 0xb5, 0xfe, 0xeb
  db 0xea, 0xdb, 0xb4, 0xbc, 0xb5, 0xb1, 0xf9, 0x89, 0x8e, 0x89, 0x8e, 0xc5
  db 0xea, 0xe0, 0xa4, 0xf0, 0xec, 0xe1, 0xa4, 0xe2, 0xed, 0xea, 0xe5, 0xe8
  db 0xa4, 0xf4, 0xe5, 0xf7, 0xf7, 0xf3, 0xeb, 0xf6, 0xe0, 0xa4, 0xed, 0xf7
  db 0xbe, 0xa4, 0xcd, 0xf0, 0xf7, 0xc9, 0xe1, 0xc9, 0xf6, 0xc8, 0xe1, 0xe5
  db 0xe2, 0x89, 0x8e
  db 0x00

; fill the rest space
Fill:
  times 510-($-$$) db 0
  db 0x55
  db 0xAA
