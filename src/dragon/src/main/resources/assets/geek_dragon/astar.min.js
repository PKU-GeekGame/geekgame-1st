// javascript-astar 0.4.1
// http://github.com/bgrins/javascript-astar
// Freely distributable under the MIT License.
// Implements the astar search algorithm in javascript using a Binary Heap.
// Includes Binary Heap (with modifications) from Marijn Haverbeke.
// http://eloquentjavascript.net/appendix2.html
!function(t){if("object"==typeof module&&"object"==typeof module.exports)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();window.astar=n.astar,window.Graph=n.Graph}}(function(){function g(t){for(var n=t,i=[];n.parent;)i.unshift(n),n=n.parent;return i}var y={search:function(t,n,i,e){t.cleanDirty();var o=(e=e||{}).heuristic||y.heuristics.manhattan,s=e.closest||!1,h=new v(function(t){return t.f}),r=n;for(n.h=o(n,i),h.push(n);0<h.size();){var c=h.pop();if(c===i)return g(c);c.closed=!0;for(var u=t.neighbors(c),a=0,f=u.length;a<f;++a){var p=u[a];if(!p.closed&&!p.isWall()){var l=c.g+p.getCost(c),d=p.visited;(!d||l<p.g)&&(p.visited=!0,p.parent=c,p.h=p.h||o(p,i),p.g=l,p.f=p.g+p.h,t.markDirty(p),s&&(p.h<r.h||p.h===r.h&&p.g<r.g)&&(r=p),d?h.rescoreElement(p):h.push(p))}}}return s?g(r):[]},heuristics:{manhattan:function(t,n){return Math.abs(n.x-t.x)+Math.abs(n.y-t.y)},diagonal:function(t,n){var i=Math.sqrt(2),e=Math.abs(n.x-t.x),o=Math.abs(n.y-t.y);return 1*(e+o)+(i-2)*Math.min(e,o)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};function t(t,n){n=n||{},this.nodes=[],this.diagonal=!!n.diagonal,this.grid=[];for(var i=0;i<t.length;i++){this.grid[i]=[];for(var e=0,o=t[i];e<o.length;e++){var s=new h(i,e,o[e]);this.grid[i][e]=s,this.nodes.push(s)}}this.init()}function h(t,n,i){this.x=t,this.y=n,this.weight=i}function v(t){this.content=[],this.scoreFunction=t}return t.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)y.cleanNode(this.nodes[t])},t.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)y.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},t.prototype.markDirty=function(t){this.dirtyNodes.push(t)},t.prototype.neighbors=function(t){var n=[],i=t.x,e=t.y,o=this.grid;return o[i-1]&&o[i-1][e]&&n.push(o[i-1][e]),o[i+1]&&o[i+1][e]&&n.push(o[i+1][e]),o[i]&&o[i][e-1]&&n.push(o[i][e-1]),o[i]&&o[i][e+1]&&n.push(o[i][e+1]),this.diagonal&&(o[i-1]&&o[i-1][e-1]&&n.push(o[i-1][e-1]),o[i+1]&&o[i+1][e-1]&&n.push(o[i+1][e-1]),o[i-1]&&o[i-1][e+1]&&n.push(o[i-1][e+1]),o[i+1]&&o[i+1][e+1]&&n.push(o[i+1][e+1])),n},t.prototype.toString=function(){for(var t,n,i,e,o=[],s=this.grid,h=0,r=s.length;h<r;h++){for(t=[],i=0,e=(n=s[h]).length;i<e;i++)t.push(n[i].weight);o.push(t.join(" "))}return o.join("\n")},h.prototype.toString=function(){return"["+this.x+" "+this.y+"]"},h.prototype.getCost=function(t){return t&&t.x!=this.x&&t.y!=this.y?1.41421*this.weight:this.weight},h.prototype.isWall=function(){return 0===this.weight},v.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return 0<this.content.length&&(this.content[0]=n,this.bubbleUp(0)),t},remove:function(t){var n=this.content.indexOf(t),i=this.content.pop();n!==this.content.length-1&&(this.content[n]=i,this.scoreFunction(i)<this.scoreFunction(t)?this.sinkDown(n):this.bubbleUp(n))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var n=this.content[t];0<t;){var i=(t+1>>1)-1,e=this.content[i];if(!(this.scoreFunction(n)<this.scoreFunction(e)))break;this.content[i]=n,this.content[t]=e,t=i}},bubbleUp:function(t){for(var n=this.content.length,i=this.content[t],e=this.scoreFunction(i);;){var o,s=t+1<<1,h=s-1,r=null;if(h<n){var c=this.content[h];(o=this.scoreFunction(c))<e&&(r=h)}if(s<n){var u=this.content[s];this.scoreFunction(u)<(null===r?e:o)&&(r=s)}if(null===r)break;this.content[t]=this.content[r],this.content[r]=i,t=r}}},{astar:y,Graph:t}});
