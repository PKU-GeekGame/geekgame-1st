import random, time
from randcrack import RandCrack
from pwn import *

# p = process('./sweeper.py')
p = remote('prob09.geekgame.pku.edu.cn', 10009)
p.sendline(b'9:MEUCIQCGbOCjs6FlKPoG+d0G4JeNSy9EO3NPYmlq1P1AIL1v6AIgDOoxZYMtdQLmPqJ2u47fLRzeLOwwZDC15IIlPq57A0Y=')
p.recvline() # Welcome ...
p.sendlineafter(b"n)", b'y')
p.recvline() # easy mode ... New Game!

rc = RandCrack()

def USR(x, shift):
    res = x
    for i in range(32):
        res = x ^ res >> shift
    return res

def USL(x, shift, mask):
    res = x
    for i in range(32):
        res = x ^ (res << shift & mask)
    return res

def randomnum_to_MT(v):
    v = USR(v, 18)
    v = USL(v, 15, 0xefc60000)
    v = USL(v, 7, 0x9d2c5680)
    v = USR(v, 11)
    return v

def MT_to_randomnum(y):
    y = y ^ (y >> 11)
    y = y ^ ((y << 7) & (0x9d2c5680))
    y = y ^ ((y << 15) & (0xefc60000))
    y = y ^ (y >> 18)
    return y

def trans(s):
    ret = 0
    for i in reversed(range(0,16)):
        if s[i] == '*':
            ret = (ret << 1) | 1
        else:
            ret = ret << 1
    return ret

mt0 = []
mt1 = []
mt397 = []
for cas in range(39):
    # 78 * (16 * 16) = 624 * 32
    flag = True
    nx, ny = 0, 0
    while nx < 16:
        p.sendline('{} {}'.format(nx, ny).encode())
        res = p.recvline(keepends=False).decode().split()
        if len(res) >= 1 and res[1] == 'BOOM!':
            flag = False
            for kkk in range(0, 8):
                l1 = p.recvline(keepends=False).decode()
                l2 = p.recvline(keepends=False).decode()
                v = (trans(l2)<<16)|trans(l1)
                #print(l1, l2, (trans(l2)<<16)|trans(l1))
                if cas == 0:
                    mt0.append(randomnum_to_MT(v))
                    if kkk > 0:
                        mt1.append(randomnum_to_MT(v))
                if cas == 1 and kkk == 0:
                    mt1.append(randomnum_to_MT(v))
                if cas == 24 and kkk >= 5:
                    mt397.append(randomnum_to_MT(v))
                if cas == 25 and kkk < 5:
                    mt397.append(randomnum_to_MT(v))

            p.recvline() # \n
            p.sendline(b'y')
            p.recvline() # try again .. New Game!
            break
        ny += 1
        if ny >= 16:
            nx += 1
            ny = 0
    if flag:
        break

WIDTH = 16
HEIGHT = 16
mt624 = 0
for i in range(8):
    y = (mt0[i] & 0x80000000) + (mt1[i] & 0x7fffffff)
    mti=mt397[i] ^ (y>>1)
    if (y%2) != 0:
        mti ^= 0x9908b0df
    mt624 |= (MT_to_randomnum(mti)) << (i*32)
#print(hex(mt624))

print("=======START HACK==========")
#bits = rc.predict_getrandbits(WIDTH * HEIGHT)
bits = mt624
board = [[None] * WIDTH for _ in range(HEIGHT)]
for i in range(HEIGHT):
    for j in range(WIDTH):
        x = (bits >> (i * WIDTH + j)) & 1
        board[i][j] = x

for i in range(HEIGHT):
    for j in range(WIDTH):
        if board[i][j] == 0:
            print(i, j)
            p.sendline('{} {}'.format(i, j).encode())
            res = p.recvline(keepends=False).decode().split()
            print(res)

res = p.recvall()
print(res)
